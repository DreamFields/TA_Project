// Copyright 1998-2018 Epic Games, Inc. All Rights Reserved.


#include "/Engine/Public/Platform.ush"
float4 SimpleColor;

void MainVS(
    in float4 InPosition : ATTRIBUTE0,
    in float2 InUV : ATTRIBUTE1,
    out float2 OutUV : TEXCOORD0,
    // in uint GlobalVertexId : SV_VertexID,
    // out float2 OutVertexDistortedViewportUV : TEXCOORD0,
    out float4 OutPosition : SV_POSITION
)
{

    // // 计算单元索引。
    // uint GridCellIndex = GlobalVertexId / 6;

    // // 计算网格中单元行和列的ID。
    // uint GridColumnId = GridCellIndex / GRID_SUBDIVISION_Y;
    // uint GridRowId = GridCellIndex - GridColumnId * GRID_SUBDIVISION_Y;

    // // 计算双三角形网格单元中的顶点ID。
    // uint VertexId = GlobalVertexId - GridCellIndex * 6;

    // // 计算单元中三角形顶点源自左下角的UV坐标。
    // float2 CellVertexUV = float2(0x1 & ((VertexId + 1) / 3), VertexId & 0x1);

    // // 计算网格中顶点源自左上角的UV。
    // float2 GridInvSize = 1.f / float2(GRID_SUBDIVISION_X, GRID_SUBDIVISION_Y);
    // float2 GridVertexUV = 2*(CellVertexUV + float2(GridColumnId, GridRowId));
    // // 标准不含半像素位移。
    // GridVertexUV -= 1;

    // // 输出顶点位置。
    // OutPosition = float4(GridVertexUV, 0, 1);

    OutPosition = InPosition;
    OutUV = InUV;
}

void MainPS(
    out float4 OutColor : SV_Target0
)
{
    OutColor = SimpleColor;
}